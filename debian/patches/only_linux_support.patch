--- a/src/main/java/com/github/markusbernhardt/proxy/ProxySearch.java
+++ b/src/main/java/com/github/markusbernhardt/proxy/ProxySearch.java
@@ -7,12 +7,10 @@
 import java.util.List;
 
 import com.github.markusbernhardt.proxy.search.browser.firefox.FirefoxProxySearchStrategy;
-import com.github.markusbernhardt.proxy.search.browser.ie.IEProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.DesktopProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.gnome.GnomeDConfProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.gnome.GnomeProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.kde.KdeProxySearchStrategy;
-import com.github.markusbernhardt.proxy.search.desktop.win.WinProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.env.EnvProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.java.JavaProxySearchStrategy;
 import com.github.markusbernhardt.proxy.selector.misc.BufferedProxySelector;
@@ -62,12 +60,8 @@
         BROWSER,
         /// Use Firefox settings
         FIREFOX,
-        /// Use InternetExplorer settings
-        IE,
         /// Use environment variables for proxy settings.
         ENV_VAR,
-        /// Use windows default proxy settings.
-        WIN,
         /// Use KDE desktop default proxy settings.
         KDE,
         /// Use KDE desktop default proxy settings.
@@ -133,15 +127,9 @@
         case FIREFOX:
             this.strategies.add(new FirefoxProxySearchStrategy());
             break;
-        case IE:
-            this.strategies.add(new IEProxySearchStrategy());
-            break;
         case ENV_VAR:
             this.strategies.add(new EnvProxySearchStrategy());
             break;
-        case WIN:
-            this.strategies.add(new WinProxySearchStrategy());
-            break;
         case KDE:
             this.strategies.add(new KdeProxySearchStrategy());
             break;
@@ -184,8 +172,6 @@
 
     private ProxySearchStrategy getDefaultBrowserStrategy() {
         switch (PlatformUtil.getDefaultBrowser()) {
-        case IE:
-            return new IEProxySearchStrategy();
         case FIREFOX:
             return new FirefoxProxySearchStrategy();
         }
--- a/src/main/java/com/github/markusbernhardt/proxy/selector/whitelist/DefaultWhiteListParser.java
+++ b/src/main/java/com/github/markusbernhardt/proxy/selector/whitelist/DefaultWhiteListParser.java
@@ -3,7 +3,6 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.github.markusbernhardt.proxy.search.browser.ie.IELocalByPassFilter;
 import com.github.markusbernhardt.proxy.selector.whitelist.HostnameFilter.Mode;
 import com.github.markusbernhardt.proxy.util.UriFilter;
 
@@ -57,8 +56,6 @@
             } else if (tkn.trim().startsWith("*")) {
                 tkn = tkn.substring(1);
                 result.add(new HostnameFilter(Mode.ENDS_WITH, tkn));
-            } else if (tkn.trim().equals("<local>")) {
-                result.add(new IELocalByPassFilter());
             } else {
                 result.add(new HostnameFilter(Mode.ENDS_WITH, tkn));
             }
--- a/src/main/java/com/github/markusbernhardt/proxy/search/desktop/DesktopProxySearchStrategy.java
+++ b/src/main/java/com/github/markusbernhardt/proxy/search/desktop/DesktopProxySearchStrategy.java
@@ -5,8 +5,6 @@
 import com.github.markusbernhardt.proxy.ProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.gnome.GnomeProxySearchStrategy;
 import com.github.markusbernhardt.proxy.search.desktop.kde.KdeProxySearchStrategy;
-import com.github.markusbernhardt.proxy.search.desktop.osx.OsxProxySearchStrategy;
-import com.github.markusbernhardt.proxy.search.desktop.win.WinProxySearchStrategy;
 import com.github.markusbernhardt.proxy.util.Logger;
 import com.github.markusbernhardt.proxy.util.PlatformUtil;
 import com.github.markusbernhardt.proxy.util.ProxyException;
@@ -62,18 +60,12 @@
 
         ProxySearchStrategy strategy = null;
 
-        if (pf == Platform.WIN) {
-            Logger.log(getClass(), LogLevel.TRACE, "We are running on Windows.");
-            strategy = new WinProxySearchStrategy();
-        } else if (dt == Desktop.KDE) {
+        if (dt == Desktop.KDE) {
             Logger.log(getClass(), LogLevel.TRACE, "We are running on KDE.");
             strategy = new KdeProxySearchStrategy();
         } else if (dt == Desktop.GNOME) {
             Logger.log(getClass(), LogLevel.TRACE, "We are running on Gnome.");
             strategy = new GnomeProxySearchStrategy();
-        } else if (dt == Desktop.MAC_OS) {
-            Logger.log(getClass(), LogLevel.TRACE, "We are running on Mac OSX.");
-            strategy = new OsxProxySearchStrategy();
         }
         return strategy;
     }
--- a/src/main/java/com/github/markusbernhardt/proxy/search/browser/firefox/FirefoxProxySearchStrategy.java
+++ b/src/main/java/com/github/markusbernhardt/proxy/search/browser/firefox/FirefoxProxySearchStrategy.java
@@ -78,13 +78,7 @@
 
     public FirefoxProxySearchStrategy() {
         super();
-        if (PlatformUtil.getCurrentPlattform() == Platform.WIN) {
-            this.profileScanner = new WinFirefoxProfileSource();
-        } else if (PlatformUtil.getCurrentPlattform() == Platform.MAC_OS) {
-            this.profileScanner = new OsxFirefoxProfileSource();
-        } else {
-            this.profileScanner = new LinuxFirefoxProfileSource();
-        }
+        this.profileScanner = new LinuxFirefoxProfileSource();
         this.settingsParser = new FirefoxSettingParser();
     }
 
